# This workflow will deploy to S3 with static site in place
name: Build and deploy package releases
on:
    workflow_dispatch:

    workflow_call:
        inputs:
            ref:
                required: false
                type: string
                description: 'The commit SHA to checkout'

    # push:
    #   branches:
    #     - 'main'
    #   paths:
    #     - 'src/**'
    #     - 'static/*'

jobs:
    validate:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  ref: ${{ inputs.ref }}

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install app
              run: npm install

            - name: Lint app
              run: npm run lint:check

            - name: check format
              run: npm run format:check

    publish-win-release:
        needs: [validate]
        runs-on: windows-latest

        strategy:
            matrix:
                node-version: [20.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install
              run: npm install

            - name: Build for production
              run: npm run build:win

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET }}
                  aws-region: eu-west-1

            - name: Deploy to S3
              run: |
                  echo "Copy to sync folder"
                  mkdir -p ./dist/sync
                  cp ./dist/ApplitestLocalRunner* ./dist/sync
                  echo "Syncing to S3"
                  aws s3 sync ./dist/sync s3://${{ vars.AWS_S3 }}/downloads
                  aws cloudfront create-invalidation --distribution-id=${{ vars.AWS_CLOUDFRONT }}  --paths "/downloads/*"

    publish-macos13-release:
        needs: [validate]
        runs-on: macos-13

        strategy:
            matrix:
                node-version: [20.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install
              run: npm install

            - name: Build for production
              env:
                  USE_HARD_LINKS: false
              run: npm run build:mac

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET }}
                  aws-region: eu-west-1

            - name: Deploy to S3
              run: |
                  echo "Copy to sync folder"
                  mkdir -p ./dist/sync
                  cp ./dist/ApplitestLocalRunner-mac.dmg ./dist/sync/ApplitestLocalRunner-macos13.dmg
                  echo "Syncing to S3"
                  aws s3 sync ./dist/sync s3://${{ vars.AWS_S3 }}/downloads
                  aws cloudfront create-invalidation --distribution-id=${{ vars.AWS_CLOUDFRONT }}  --paths "/downloads/*"

    # publish-macoslatest-release:
    #     needs: [validate, publish-macos13-release]
    #     runs-on: macos-latest

    #     strategy:
    #         matrix:
    #             node-version: [20.x]
    #             # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    #     steps:
    #         - uses: actions/checkout@v4

    #         - name: Use Node.js ${{ matrix.node-version }}
    #           uses: actions/setup-node@v4
    #           with:
    #               node-version: ${{ matrix.node-version }}
    #               cache: 'npm'

    #         - name: Install
    #           run: npm install

    #         - name: Build for production
    #           env:
    #               USE_HARD_LINKS: false
    #           run: npm run build:mac

    #         - name: Configure AWS Credentials
    #           uses: aws-actions/configure-aws-credentials@v4
    #           with:
    #               aws-access-key-id: ${{ secrets.AWS_ACCESS }}
    #               aws-secret-access-key: ${{ secrets.AWS_SECRET }}
    #               aws-region: eu-west-1

    #         - name: Deploy to S3
    #           run: |
    #               echo "Copy to sync folder"
    #               mkdir -p ./dist/sync
    #               cp ./dist/ApplitestLocalRunner-mac.dmg ./dist/sync/ApplitestLocalRunner-macos-arm64.dmg
    #               echo "Syncing to S3"
    #               aws s3 sync ./dist/sync s3://${{ vars.AWS_S3 }}/downloads
    #               aws cloudfront create-invalidation --distribution-id=${{ vars.AWS_CLOUDFRONT }}  --paths "/downloads/*"
